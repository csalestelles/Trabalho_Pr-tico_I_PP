package BibliotecaSIS;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

public class RevistaDAO 
{
	public Revista revista;
	private PreparedStatement statement;
	private ResultSet resultSet;
	private String men, sql;
	public BancoDeDados bd;
	
	public RevistaDAO()
	{
		bd = new BancoDeDados();
		revista = new Revista();
	}
	
	public boolean localizar()
	{
		sql = "SELECT * FROM Revistas WHERE Nome=? AND Edicao=?";
		try
		{
			statement = bd.conexao.prepareStatement(sql);
			statement.setString(1, revista.getNome());
			statement.setInt(2, revista.getEdicao());
			resultSet = statement.executeQuery();
			resultSet.next();
			revista.setNome(resultSet.getString(2));
			revista.setTema(resultSet.getString(4));
			revista.setEditora(resultSet.getString(3));
			revista.setAno(resultSet.getInt(6));
			revista.setEdicao(resultSet.getInt(5));
			revista.setNumExemplares(resultSet.getInt(7));
			return true;
		}
		catch(SQLException e){return false;}
	}
	
	public String atualizar(int operacao)
	{
		men = "Operação realizada com sucesso!";
		
		try
		{
			if (operacao == BancoDeDados.INCLUSAO)
			{
				sql = "INSERT INTO Revistas VALUES (NULL, ?, ?, ?, ?, ?, ?, ?)";
				statement = bd.conexao.prepareStatement(sql);
				statement.setString(1, revista.getNome());
				statement.setString(2, revista.getEditora());
				statement.setString(3, revista.getTema());
				statement.setInt(5, revista.getEdicao());
				statement.setInt(6, revista.getAno());
				statement.setInt(7, revista.getNumExemplares());
			}
			else if(operacao == BancoDeDados.ALTERACAO)
			{
				sql = "UPDATE Revistas SET Editora=?, Tema=?, Ano=?, Total de exemplares=? WHERE Nome=? AND Edicao=?";
				statement = bd.conexao.prepareStatement(sql);
				statement.setString(1, revista.getEditora());
				statement.setString(2, revista.getTema());
				statement.setInt(3, revista.getAno());
				statement.setInt(4, revista.getNumExemplares());
				statement.setString(5, revista.getNome());
				statement.setInt(6, revista.getEdicao());
			}
			else if (operacao == BancoDeDados.EXCLUSAO)
			{
				sql = "DELETE FROM Livros WHERE Nome=? AND Edicao=?";
				statement = bd.conexao.prepareStatement(sql);
				statement.setString(1, revista.getNome());
				statement.setInt(2, revista.getEdicao());
			}
			if(statement.executeUpdate() == 0)
			{
				men = "Falha na operacao!";
			}
		}
		catch(SQLException g){men = "Falha na operação";}
		return men;
	}
	
	/*
	 * 
	 * OPERAÇÕES NA TABELA
	 * 
	 */
	
	public ArrayList<Revista> listarRevistas() throws SQLException
	{
		ArrayList<Revista> listRevistas = new ArrayList<Revista>();
		
		sql = "SELECT * FROM Revistas";
		statement = BancoDeDados.conexao.prepareStatement(sql);
		resultSet = statement.executeQuery();
		while(resultSet.next())
		{
			Revista revistaAdd = new Revista();
			revistaAdd.setNome(resultSet.getString(2));
			revistaAdd.setEdicao(resultSet.getInt(5));
			revistaAdd.setEditora(resultSet.getString(3));
			revistaAdd.setTema(resultSet.getString(4));
			revistaAdd.setAno(resultSet.getInt(6));
			revistaAdd.setNumExemplares(resultSet.getInt(7));
			listRevistas.add(revistaAdd);
		}
		return listRevistas;
	}
	
	public void showRevistasTable(JTable table)
	{
		ArrayList<Revista> listRevistas = new ArrayList<Revista>();
		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); 
		table.setModel(new DefaultTableModel(
				new String[]{"Nome", "Edicao", "Editora", "Tema", "Ano", "Exemplares"}, 0) {
				public boolean isCellEditable(int row, int col)
				{	
					return false;
				}
				});
		try 
		{
			listRevistas = listarRevistas();
		} 
		catch (SQLException e) {e.printStackTrace();}
		
		DefaultTableModel model =(DefaultTableModel)table.getModel();
		model.setNumRows(0);
		Object[] row = new Object[7];
		for (int i=0; i<listRevistas.size();i++)
		{
			row[0] = listRevistas.get(i).getNome();
			row[1] = listRevistas.get(i).getEdicao();
			row[2] = listRevistas.get(i).getEditora();
			row[3] = listRevistas.get(i).getTema();
			row[4] = listRevistas.get(i).getAno();
			row[5] = listRevistas.get(i).getNumExemplares();
			model.addRow(row);
		}
	}
	
	public void removeDaTabela(JTable table, PeriodicoDAO periodicos) throws SQLException
	{
		DefaultTableModel dtm = (DefaultTableModel) table.getModel();
		
		if (table.getSelectedRow() != -1)
		{
			int indice = table.getSelectedRow();
			periodicos.periodico.setNome((String) table.getValueAt(indice, 0));
			periodicos.periodico.setExemplar((int) table.getValueAt(indice, 5));
			dtm.removeRow(table.getSelectedRow());
			JOptionPane.showMessageDialog(null, periodicos.atualizar(BancoDeDados.EXCLUSAO));
		}
		else
		{
			JOptionPane.showMessageDialog(null, "Selecione uma linha!");
		}
	}
	}

}
