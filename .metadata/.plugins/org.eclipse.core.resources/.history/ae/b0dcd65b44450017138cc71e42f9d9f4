package BibliotecaSIS;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JComboBox;
import javax.swing.AbstractButton;
import javax.swing.JButton;
import java.awt.Color;
import javax.swing.JTextField;
import javax.swing.JLabel;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.Observable;
import java.awt.event.ActionEvent;
import javax.swing.JTextPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

import java.awt.SystemColor;
import java.awt.Font;
import javax.swing.JTable;

import java.sql.*;

public class AdminWindow extends JPanel 
{
	private JTabbedPane tpAbas;
	private JFrame frmPesquisa;
	private JTable usuarioTable, monografiaTable, periodicoTable, livroTable, revistaTable;
	
	private UsuarioDAO usuarios = new UsuarioDAO();
	private LivroDAO livros = new LivroDAO();
	private MonografiaDAO monografias = new MonografiaDAO();
	private PeriodicoDAO periodicos = new PeriodicoDAO();
	private RevistaDAO revistas = new RevistaDAO();
	
	private JTable table;
	private JButton btnAdicionar;
	
	private PreparedStatement statement;
	private ResultSet resultSet;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					AdminWindow window = new AdminWindow();
					window.frmPesquisa.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public AdminWindow() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frmPesquisa = new JFrame();
		frmPesquisa.setTitle("Pesquisa");
		frmPesquisa.setBounds(100, 100, 700, 590);
		frmPesquisa.setResizable(false);
		frmPesquisa.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JMenuBar menuBar = new JMenuBar();
		menuBar.setBackground(Color.GRAY);
		frmPesquisa.setJMenuBar(menuBar);
		
		JMenu mnPesquisar = new JMenu("Adicionar");
		mnPesquisar.setBackground(Color.GRAY);
		menuBar.add(mnPesquisar);
		
		JMenuItem menuItem_1 = new JMenuItem("Livro");
		mnPesquisar.add(menuItem_1);
		menuItem_1.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				AddLivro addLivro = new AddLivro();
				addLivro.main(null);
				frmPesquisa.dispose();	
			}
		});
		
		JMenuItem menuItem_2 = new JMenuItem("Monografia");
		mnPesquisar.add(menuItem_2);
		menuItem_2.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				AddMonografia addMonografia = new AddMonografia();
				addMonografia.main(null);
				frmPesquisa.dispose();	
			}
		});
		
		JMenuItem menuItem_3 = new JMenuItem("Periódico");
		mnPesquisar.add(menuItem_3);
		menuItem_3.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e)
			{
				AddPeriodico addPeriodico = new AddPeriodico();
				addPeriodico.main(null);
				frmPesquisa.dispose();	
			}
		});
		
		JMenuItem menuItem_4 = new JMenuItem("Revista");
		mnPesquisar.add(menuItem_4);
		
		JMenu mnRemover = new JMenu("Remover");
		mnRemover.setBackground(Color.GRAY);
		menuBar.add(mnRemover);
		
		JMenuItem mntmUsurio = new JMenuItem("Usuário");
		mnRemover.add(mntmUsurio);
		
		JMenuItem mntmLivro = new JMenuItem("Livro");
		mnRemover.add(mntmLivro);
		
		JMenuItem mntmMonografia = new JMenuItem("Monografia");
		mnRemover.add(mntmMonografia);
		
		JMenuItem mntmPeridico = new JMenuItem("Periódico");
		mnRemover.add(mntmPeridico);
		
		JMenuItem mntmRevista = new JMenuItem("Revista");
		mnRemover.add(mntmRevista);
		
		JMenu mnSair = new JMenu("Sair");
		menuBar.add(mnSair);
		
		JMenuItem mntmLogOut = new JMenuItem("Log out");
		mnSair.add(mntmLogOut);
		
		JMenu mnTeste = new JMenu("Arquivo");
		menuBar.add(mnTeste);
		
		JMenu mnAdicionar = new JMenu("Adicionar");
		mnTeste.add(mnAdicionar);
		
		JMenuItem mntmMonografia_1 = new JMenuItem("Documento Acadêmico");
		mnAdicionar.add(mntmMonografia_1);
		
		JMenuItem mntmLivro_1 = new JMenuItem("Livro");
		mnAdicionar.add(mntmLivro_1);
		
		JMenuItem mntmPeridico_1 = new JMenuItem("Periódico");
		mnAdicionar.add(mntmPeridico_1);
		
		JMenuItem mntmRevista_1 = new JMenuItem("Revista");
		mnAdicionar.add(mntmRevista_1);
		
		JMenu mnRemover_1 = new JMenu("Remover");
		mnTeste.add(mnRemover_1);
		
		JMenuItem mntmUsurio_1 = new JMenuItem("Usuário");
		mnRemover_1.add(mntmUsurio_1);
		
		JMenuItem mntmDocumentoAcadmico = new JMenuItem("Documento Acadêmico");
		mnRemover_1.add(mntmDocumentoAcadmico);
		
		JMenuItem mntmLivro_2 = new JMenuItem("Livro");
		mnRemover_1.add(mntmLivro_2);
		
		JMenuItem mntmPeridico_2 = new JMenuItem("Periódico");
		mnRemover_1.add(mntmPeridico_2);
		
		JMenuItem mntmRevista_2 = new JMenuItem("Revista");
		mnRemover_1.add(mntmRevista_2);
		frmPesquisa.getContentPane().setLayout(null);
		mntmLogOut.addActionListener( new ActionListener(){
			public void actionPerformed(ActionEvent e) 
			{
				AdminLogin adminLogin = new AdminLogin();
				frmPesquisa.dispose();
				adminLogin.main(null);
			}
		});
		
		btnAdicionar = new JButton("Adicionar");
		btnAdicionar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) 
			{
				adicionarBotao(tpAbas);
			}
		});
		btnAdicionar.setBounds(50, 9, 117, 29);
		btnAdicionar.setEnabled(false);
		frmPesquisa.getContentPane().add(btnAdicionar);
		
//		String[] itens = {"", "Usuário", "Livro", "Monografia", "Periódico", "Revista", "Tese"};
		tpAbas = new JTabbedPane();
		
		usuarioTable = new JTable();
		monografiaTable = new JTable();
		livroTable = new JTable();
		periodicoTable = new JTable();
		revistaTable = new JTable();
		
		try
		{
			usuarios.setTabela(table, usuarioScroll);
			setTableLivros(table, livroScroll);
			monografias.setTabela(table, monografiaScroll);
			periodicos.setTabela(table, periodicoScroll);
			revistas.setTabela(table, revistaScroll);
		}
		catch (SQLException e1) {e1.printStackTrace();}
		
		tpAbas.add("Usuários", usuarioScroll);
		tpAbas.add("Livros", livroScroll);
		tpAbas.add("Monografias", monografiaScroll);
		tpAbas.add("Periódicos", periodicoScroll);
		tpAbas.add("Revistas", revistaScroll);
		
		tpAbas.setBounds(50, 50, 600, 490);
		frmPesquisa.getContentPane().add(tpAbas);
		
		 tpAbas.addChangeListener(new javax.swing.event.ChangeListener() {
			    public void stateChanged(javax.swing.event.ChangeEvent e) {
			        if (tpAbas.getSelectedComponent() == usuarioScroll) 
			        {
			            btnAdicionar.setEnabled(false);
			        }
			        else
			        {
			        	btnAdicionar.setEnabled(true);
			        }
			    }
			});
		
		JButton btnRemover = new JButton("Remover");
		btnRemover.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) 
			{
				try 
				{
					removerBotao(tpAbas);
				} 
				catch (SQLException e1) {e1.printStackTrace();}
			}
		});
		btnRemover.setBounds(179, 9, 117, 29);
		frmPesquisa.getContentPane().add(btnRemover);
		
		JButton btnEdita = new JButton("Editar");
		btnEdita.setBounds(308, 9, 117, 29);
		frmPesquisa.getContentPane().add(btnEdita);
		
		JButton btnRelatorio = new JButton("Relatório");
		btnRelatorio.setBounds(437, 9, 117, 29);
		frmPesquisa.getContentPane().add(btnRelatorio);
	}
	
	private void adicionarBotao(JTabbedPane abas)
	{
		int valor = abas.getSelectedIndex();
		switch(valor)
		{
			case 1:
				frmPesquisa.dispose();
				AddLivro.main(null);
				break;
			case 2:
				frmPesquisa.dispose();
				AddMonografia.main(null);
				break;
			case 3:
				frmPesquisa.dispose();
				AddPeriodico.main(null);
				break;
			case 4:
				frmPesquisa.dispose();
				AddRevista.main(null);
				break;
			default: 
				System.out.println("erro\n");	
		}
	}
	
	private void removerBotao(JTabbedPane abas) throws SQLException
	{
		int valor = abas.getSelectedIndex();
		switch(valor)
		{
			case 0:
				//frmPesquisa.dispose();
				//AddLivro.main(null);
				break;
			case 1:
				//frmPesquisa.dispose();
				removeDaTabela();
				break;
			case 2:
				//frmPesquisa.dispose();
				//AddPeriodico.main(null);
				break;
			case 3:
				//frmPesquisa.dispose();
				//AddRevista.main(null);
				break;
			case 4:
				//frmPesquisa.dispose();
				break;
			default: 
				System.out.println("erro\n");	
		}
	}
	
	public void setTableLivros(JTable tabela, JScrollPane scroll) throws SQLException
	{
		String sql = "SELECT * FROM Livros";
		statement = BancoDeDados.conexao.prepareStatement(sql);
		resultSet = statement.executeQuery();	
		
		@SuppressWarnings("serial")
		DefaultTableModel modelo = new DefaultTableModel(
				new String[]{}, 0) {
				public boolean isCellEditable(int row, int col)
				{	
					return false;
				}
				};
				
		
		int qtdColunas = resultSet.getMetaData().getColumnCount() - 1;		
		for(int indice = 1; indice <= qtdColunas; indice++)
		{
			modelo.addColumn(resultSet.getMetaData().getColumnName(indice+1));
		}
		
		tabela = new JTable(modelo);
		tabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); 
		DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
		
		while(resultSet.next())
		{
			String[] dados = new String[qtdColunas];
			for(int i = 1; i <= qtdColunas; i++)
			{
				dados[i-1] = resultSet.getString(i+1);
			}
			
			dtm.addRow(dados);
			scroll.setViewportView(tabela);
		}
	}
	
	public void removeDaTabela() throws SQLException
	{
		JTable tabela = (JTable) usuarioScroll.getComponent(0);
		DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
		
		if (tabela.getSelectedRow() != -1)
		{
			int indice = tabela.getSelectedRow();
			livros.livro.setTitulo((String) tabela.getValueAt(indice, 0));
			livros.livro.setEdicao((int) tabela.getValueAt(indice, 5));
			dtm.removeRow(tabela.getSelectedRow());
			JOptionPane.showMessageDialog(null, livros.atualizar(BancoDeDados.EXCLUSAO));
		}
		else
		{
			JOptionPane.showMessageDialog(null, "Selecione uma linha!");
		}
	}
}
